{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","setSelectedTabId","className","map","element","id","href","onClick","e","elementId","preventDefault","tabClickHandler","title","find","el","content","App","useState","ReactDOM","render","document","getElementById"],"mappings":"qLAQaA,EAAwB,SAAC,GAMhC,IAAD,EAJDC,EAIC,EAJDA,KACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,iBAUF,OACE,gCACE,qBAAKC,UAAU,gBAAf,SACE,6BAEIH,EAAKI,KAAI,SAAAC,GAAO,OACd,oBACEF,UAAWF,IAAkBI,EAAQC,GAAK,YAAc,GAD1D,SAIE,mBACEC,KAAMF,EAAQC,GACdE,QAAS,SAACC,IAlBxB,SAACA,EACDC,GACAD,EAAEE,iBACFT,EAAiBQ,GAgBDE,CAAgBH,EAAGJ,EAAQC,KAH/B,SAMGD,EAAQQ,SARNR,EAAQC,WAgBvB,qBAAKH,UAAU,QAAQ,UAAQ,cAA/B,mBACGH,EAAKc,MAAK,SAAAC,GAAE,OAAIA,EAAGT,KAAOL,YAD7B,aACG,EAA0Ce,cC3CtChB,G,MAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASG,QAAS,eACxC,CAAEV,GAAI,QAASO,MAAO,QAASG,QAAS,eACxC,CAAEV,GAAI,QAASO,MAAO,QAASG,QAAS,iBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAAS,SAAnD,mBAAOjB,EAAP,KAAsBC,EAAtB,KAEA,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,0CAEGH,EAAKc,MAAK,SAAAC,GAAE,OAAIA,EAAGT,KAAOL,YAF7B,aAEG,EAA0CY,SAG7C,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,iBAAkBA,QCnB1BiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6ec6c456.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId:string;\n  setSelectedTabId: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const Tabs: React.FC<Props> = (\n  {\n    tabs,\n    selectedTabId,\n    setSelectedTabId,\n  },\n) => {\n  const tabClickHandler\n  = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n    elementId: string) => {\n    e.preventDefault();\n    setSelectedTabId(elementId);\n  };\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(element => (\n              <li\n                className={selectedTabId === element.id ? 'is-active' : ''}\n                key={element.id}\n              >\n                <a\n                  href={element.id}\n                  onClick={(e) => {\n                    tabClickHandler(e, element.id);\n                  }}\n                >\n                  {element.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {tabs.find(el => el.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {tabs.find(el => el.id === selectedTabId)?.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        setSelectedTabId={setSelectedTabId}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}